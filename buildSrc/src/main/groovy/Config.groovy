/**
 * <pre>
 *     author: blankj
 *     blog  : http://blankj.com
 *     time  : 2019/07/13
 *     desc  :
 * </pre>
 */
class Config {

    static applicationId = 'com.bsnl.scaffold'
    static appName = 'scaffold'

    static compileSdkVersion = 29
    static minSdkVersion = 21
    static targetSdkVersion = 29
    static versionCode = 1_0_0
    static versionName = '1.0.0'

    // lib version
    static gradlePluginVersion = '3.6.3'
    static kotlinVersion = '1.4.10'
    static supportVersion = '28.0.0'

    static depConfig = [
            /*Never delete this line*/
            /*Generated by "config.json"*/
            plugin_api_gradle_plugin   : new DepConfig(true , true , ":plugin:api-gradle-plugin"),
            plugin_bus_gradle_plugin   : new DepConfig(true , true , ":plugin:bus-gradle-plugin"),
            plugin_lib_base_transform  : new DepConfig(true , true , ":plugin:lib:base-transform"),
            lib_base                   : new DepConfig(true , true , ":lib:base"),
            lib_common                 : new DepConfig(true , true , ":lib:common"),
            feature_launch_app         : new DepConfig(true , true , ":feature:launch:app"),
            feature_sample_pkg         : new DepConfig(true , true , ":feature:sample:pkg"),
            feature_sample_export      : new DepConfig(true , true , ":feature:sample:export"),
            lib_faster                 : new DepConfig(true , true , ":lib:faster"),
            lib_databinding            : new DepConfig(true , true , ":lib:databinding"),
            feature_constraint_pkg     : new DepConfig(true , true , ":feature:constraint:pkg"),
            feature_constraint_export  : new DepConfig(true , true , ":feature:constraint:export"),
            /*Never delete this line*/
            plugin_gradle            : new DepConfig(pluginPath: "com.android.tools.build:gradle:$gradlePluginVersion"),
            plugin_kotlin            : new DepConfig(pluginPath: "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"),
            plugin_maven             : new DepConfig(pluginPath: "com.github.dcendents:android-maven-gradle-plugin:2.1", pluginId: "com.github.dcendents.android-maven"),// 上传到 maven
            plugin_bintray           : new DepConfig(pluginPath: "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4", pluginId: "com.jfrog.bintray"),// 上传到 bintray
            plugin_traute            : new DepConfig(pluginPath: "tech.harmonysoft:traute-gradle:1.1.10", pluginId: "tech.harmonysoft.oss.traute"),// 注解转非空判断

            // 上传新版本插件更新 pluginPath 中的版本号，并设置 isApply = false
            // 通过 mavenLocal 上传本地版本，设置 isApply = true 即可应用插件来调试，最后通过 bintrayUpload 来发布插件
            plugin_api               : new DepConfig(isApply: true, useLocal: false, pluginPath: "com.blankj:api-gradle-plugin:1.4", pluginId: "com.blankj.api"),
            //./gradlew clean :plugin_api-gradle-plugin:mavenLocal     // 上传到本地 mavenLocal
            //./gradlew clean :plugin_api-gradle-plugin:bintrayUpload  // 上传到 jcenter
            plugin_bus               : new DepConfig(isApply: true, useLocal: false, pluginPath: "com.blankj:bus-gradle-plugin:2.6", pluginId: "com.blankj.bus"),
            //./gradlew clean :plugin_bus-gradle-plugin:mavenLocal     // 上传到本地 mavenLocal
            //./gradlew clean :plugin_bus-gradle-plugin:bintrayUpload  // 上传到 jcenter

            multidex                 : new DepConfig("androidx.multidex:multidex:${Versions.multidex}"),
            appcompat                : new DepConfig("androidx.appcompat:appcompat:${Versions.appcompat}"),
            coreKtx                  : new DepConfig("androidx.core:core-ktx:${Versions.coreKtx}"),
            constraintlayout         : new DepConfig("androidx.constraintlayout:constraintlayout:${Versions.constraintlayout}"),
            recyclerview             : new DepConfig("androidx.recyclerview:recyclerview:${Versions.recyclerview}"),
            viewpager2               : new DepConfig("androidx.viewpager2:viewpager2:${Versions.viewpager2}"),
            viewModel                : new DepConfig("androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.lifecycle_version}"),
            liveData                 : new DepConfig("androidx.lifecycle:lifecycle-livedata-ktx:${Versions.lifecycle_version}"),
            commonJava8              : new DepConfig("androidx.lifecycle:lifecycle-common-java8:${Versions.lifecycle_version}"),
            glide_runtime            : new DepConfig("com.github.bumptech.glide:glide:${Versions.glide}"),
            glide_compiler           : new DepConfig("com.github.bumptech.glide:compiler:${Versions.glide}"),
            kotlin                   : new DepConfig("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$Versions.kotlin"),
            retrofit_runtime         : new DepConfig("com.squareup.retrofit2:retrofit:${Versions.retrofit}"),
            convert_gson             : new DepConfig("com.squareup.retrofit2:converter-gson:${Versions.retrofit}"),
            okhttp_logging           : new DepConfig("com.squareup.okhttp3:logging-interceptor:${Versions.okhttpLogging}"),
            permissionx              : new DepConfig("com.permissionx.guolindev:permissionx:${Versions.permissionx}"),
            timber                   : new DepConfig("com.jakewharton.timber:timber:${Versions.timber}"),
            mmkv                     : new DepConfig("com.tencent:mmkv-static:${Versions.mmkv}"),
            leakcanary               : new DepConfig("com.squareup.leakcanary:leakcanary-android:${Versions.leakCanary}"),
            gson                     : new DepConfig("com.google.code.gson:gson:${Versions.gson}"),
            commons_io               : new DepConfig("commons-io:commons-io:2.6"),
            test_junit               : new DepConfig("junit:junit:4.12"),
            multitype                : new DepConfig("com.drakeet.multitype:multitype:$Versions.multitype"),
            refresh_layout_kernel    : new DepConfig("com.scwang.smart:refresh-layout-kernel:$Versions.smartRefreshLayout"),
            refresh_layout_header    : new DepConfig("com.scwang.smart:refresh-header-classics:$Versions.smartRefreshLayout"),
            refresh_layout_footer    : new DepConfig("com.scwang.smart:refresh-footer-classics:$Versions.smartRefreshLayout"),
            statusbarutil            : new DepConfig("com.jaeger.statusbarutil:library:$Versions.statusBarUtil"),
            room_ktx                 : new DepConfig("androidx.room:room-ktx:$Versions.room"),
            room_compiler            : new DepConfig("androidx.room:room-compiler:$Versions.room"),
            room_runtime             : new DepConfig("androidx.room:room-runtime:${Versions.room}"),
            hilt_daggerRuntime       : new DepConfig("com.google.dagger:hilt-android:${Versions.hit}"),
            hilt_daggerCompiler      : new DepConfig("com.google.dagger:hilt-android-compiler:${Versions.hit}"),
            hilt_viewModule          : new DepConfig("androidx.hilt:hilt-lifecycle-viewmodel:${Versions.hitViewModule}"),
            hilt_compiler            : new DepConfig("androidx.hilt:hilt-compiler:${Versions.hitViewModule}"),
            epic                     : new DepConfig("me.weishu:epic:${Versions.epic}")


    ]
}